// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `DataValidateAnalyseService.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

(function(module, require, exports)
{
    var Ice = require("ice").Ice;
    var __M = Ice.__M;
    var Slice = Ice.Slice;

    var TJRH = __M.module("TJRH");

    TJRH.CASSPASS = __M.module("TJRH.CASSPASS");

    TJRH.CASSPASS.IDataValidateService = Slice.defineObject(
        undefined,
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::TJRH::CASSPASS::IDataValidateService"
        ],
        -1, undefined, undefined, false);

    TJRH.CASSPASS.IDataValidateServicePrx = Slice.defineProxy(Ice.ObjectPrx, TJRH.CASSPASS.IDataValidateService.ice_staticId, undefined);

    Slice.defineOperations(TJRH.CASSPASS.IDataValidateService, TJRH.CASSPASS.IDataValidateServicePrx,
    {
        "hello": [, , , , , [7], , , , , ],
        "getNotThroughValidataCase": [, , , , , [7], [[7]], [[7]], , , ],
        "getPassInfo": [, , , , , [7], [[7], [7]], [[7]], , , ],
        "getRecentCasePassInfo": [, , , , , [7], [[7], [7]], [[7]], , , ],
        "getExtracteCaseInfo": [, , , , , [7], [[7], [7]], [[7]], , , ],
        "getYWCaseInfo": [, , , , , [7], [[7], [7]], [[7]], , , ],
        "analyseYW": [, , , , , [7], [[7], [7], [7], [7], [7]], [[7]], , , ],
        "getCaseNotPassInfo": [, , , , , [7], [[7], [7], [7], [7], [7], [7]], [[7]], , , ],
        "getGZStatistical": [, , , , , [7], [[7]], [[7]], , , ],
        "getDWGZChooseStatistical": [, , , , , [7], [[7], [7], [7], [7], [7], [7]], [[7]], , , ],
        "getCaseInfoByID": [, , , , , [7], [[7], [7], [7], [7], [7], [7], [7]], [[7]], , , ],
        "getDWlist": [, , , , , [7], [[7], [7]], [[7]], , , ],
        "analyseCurrentDw": [, , , , , [7], [[7], [7], [7], [7]], [[7]], , , ],
        "analyseLowDw": [, , , , , [7], [[7], [7], [7], [7], [7]], [[7]], , , ],
        "validateReport": [, , , , , [7], [[7], [7], [7], [7]], [[7]], , , ],
        "latestValidateReport": [, , , , , [7], [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]], [[7]], , , ],
        "getRuleInfo": [, , , , , [7], , , , , ],
        "latestValidateReport1": [, , , , , [7], [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]], [[7]], , , ],
        "getYWList": [, , , , , [7], , , , , ],
        "stringToJson": [, , , , , [7], [[7]], , , , ],
        "getCurrentDwInfo": [, , , , , [7], [[7]], , , , ],
        "exportReport": [, , , , , [1], [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7], [7]], [[7]], , , ],
        "getReoprtTree": [, , , , , [7], , , , , ],
        "getAuditInfo": [, , , , , [7], [[7], [7], [7], [7], [3], [3]], [[7]], , , ],
        "parseAudit": [, , , , , [7], [[7], [7], [7]], [[7]], , , ],
        "getAuditCase": [, , , , , [7], [[7], [3], [3], [3], [7], [7], [7]], , , , ],
        "compareDifference": [, , , , , [7], [[7], [7], [7]], , , , ],
        "getCaseByDate": [, , , , , [7], [[7], [7], [7], [3], [3]], [[7]], , , ],
        "getLowDwCasePassInfo": [, , , , , [7], [[7], [7]], [[7]], , , ],
        "getCaseAkrule": [, , , , , [7], [[7], [7], [7]], , , , ],
        "getYwFenXi": [, , , , , [7], [[7], [7], [7], [7]], [[7]], , , ],
        "getAJLB": [, , , , , [7], [[7], [7], [7], [7], [7]], [[7]], , , ],
        "getCaseInfoByAjlb": [, , , , , [7], [[7], [7], [7], [7], [7], [7]], [[7]], , , ],
        "exportWord": [, , , , , [1], [[7], [7], [7], [7], [7], [7]], [[7]], , , ],
        "getCaseByDate1": [, , , , , [7], [[7], [7], [7], [3], [3]], [[7]], , , ],
        "getCaseConstrant": [, , , , , [7], [[7], [3], [3], [3], [7], [7], [7]], , , , ],
        "getWTGAJInfo": [, , , , , [7], [[7], [7]], , , , ],
        "getAuditBpCase": [, , , , , [7], [[7], [3], [3], [3], [7], [7], [7], [7], [3]], , , , ],
        "latestValidateReportPuls": [, , , , , [7], [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]], [[7]], , , ],
        "getCasePageByDate": [, , , , , [3], [[7], [7], [7], [3]], [[7]], , , ],
        "getCasePageByDate1": [, , , , , [3], [[7], [7], [7], [3]], [[7]], , , ],
        "exportAduitCase": [, , , , , [1], [[7], [3], [3], [3], [7], [7], [7], [7], [7], [7]], , , , ],
        "publicCaseInquire": [, , , , , [7], [[7], [3], [7], [7], [7], [7], [7], [7], [7], [7], [3], [3], [7]], [[7]], , , ],
        "getDWGZChooseStatisticalPuls": [, , , , , [7], [[7], [7], [7], [7], [7], [7], [3]], [[7]], , , ],
        "getCaseList": [, , , , , [7], [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7], [3]], [[7]], , , ],
        "getCaseTransmitList": [, , , , , [7], [[7], [7], [1], [7], [7], [7], [7], [7], [7], [3], [3]], [[7]], , , ],
        "getCaseRuleList": [, , , , , [7], [[7], [7], [1], [7], [7], [7], [7], [7], [7], [7], [7], [3], [3]], [[7]], , , ],
        "getBatchAuditInfo": [, , , , , [7], [[7], [7], [7], [7], [3], [3]], [[7]], , , ],
        "lineSupervise": [, , , , , [7], [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7], [7]], [[7]], , , ],
        "OnLowerSupervise": [, , , , , [7], [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7], [7]], [[7]], , , ],
        "getAJList": [, , , , , [7], [[7], [7], [7], [1], [3], [3], [3]], [[7]], , , ]
    });
    exports.TJRH = TJRH;
}
(typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? module : undefined,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? require : this.Ice.__require,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? exports : this));
